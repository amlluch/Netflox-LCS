@model Netflox.Models.Movie

@{
    ViewData["Title"] = "Edit";
    var imagen = "https://anonvpn.net/images/" + Model.PicName;
    var defVideo = Model.VideoName;
    var video = "https://anonvpn.net/video/" + Model.VideoName;
}

<h2>Edit</h2>

<h4>Movie</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="MovieId" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Director" class="control-label"></label>
                <input asp-for="Director" class="form-control" />
                <span asp-validation-for="Director" class="text-danger"></span>
            </div>
            @if (Model.PicName != null)
            {
                <img src="@imagen" alt="Sample Image" width="300px" />
            }

            <div class="form-group">
                <label asp-for="Pic" class="control-label"></label>
                <input asp-for="Pic" type="file" id="Imagen" name="Imagen" class="form-control" />
                <span asp-validation-for="Pic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div id="dropdown" class="row">
                    @Html.DropDownList("ActorId", new SelectList(ViewBag.ActorId, "ActorId", "ActorName"), "Select an actor", new { id = "actoresdata", @class = "selectpicker", data_style = "btn-info" })

                    <button type="button" id="buttonGetActor" class="btn btn-info" onClick="getActor()">Add Actor</button>
                </div>

            </div>
            <div class="row" id="actorslist">
                @*@{
                    if (ViewBag.HayActor == true)
                    {
                        Html.RenderPartial("_Actorslist", ViewData["actores"]);
                    }
                }*@
            </div>
            <div class="form-group">
                <label asp-for="VideoName" class="control-label"></label>
                <label asp-for="VideoName" class="control-label">@Model.VideoName</label>
            </div>
            @if (Model.VideoName != null)
            {
                <video width="480" height="320" controls="controls" autoplay="autoplay">

                    <source src="@video" type="video/mp4" />
                </video>
            }
            <div class="form-group">
                <label asp-for="Video" class="control-label"></label>
                <input asp-for="Video" type="file" id="Video" name="Video" class="form-control" />
                <span asp-validation-for="Video" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {


            var cont = 0;
            //$('#actoresdata').selectpicker({ liveSearch: true });
            
            var url = "@Url.Action("ActorsList", "Movies")";
            var id = @Model.MovieId;
            var actorId =null;
            var data = { id: id, actorId: actorId };
            $.get(url, data).done(function (data) {
                if (data != null) {

                    $('#actorslist').append(data);
                } else {
                    alert("Me viene sin datos");
                    $('#dropdown').hide();
                }
            }).fail(function (errorMessage) {
                // no data. hide div
                alert("fallo en inicialización");
                //$('#dropdown').hide();
                });

            
        });
        function getActor() {

            var opcion = $('#actoresdata').val();
            if (opcion === "") return;

            $('#buttonGetActor').prop("disabled", true);
 //           alert("Este es el valor: " + $('#actoresdata').val());
            var url = "@Url.Action("ActorsList", "Movies")";
            var id = @Model.MovieId;
            var actorId = $('#actoresdata').val();
            var data = { id: id, actorId: actorId };
            $.get(url, data).done(function (data) {
                if (data != null) {
                    $('#dropdown').show();
                    // remove actor option from select
                    $('#actoresdata option').each(function () {
                        if ($(this).val() == opcion) {
                            $(this).remove();
                        }
                    });
                    $('#actoresdata').selectpicker("refresh");

                    $('#actorslist').empty();
                    $('#actorslist').append(data);
                    $('#actoresdata').selectpicker("refresh");
                    $('#buttonGetActor').prop("disabled", false);
                } else {
                    alert("aquí pasa algo raro. me devolvió null");

                }
            }).fail(function (mensajeError) {
                alert("Aquí ha fallado todo: " + mensajeError.responseText);
            });
        }
        function removeActor(actorId, actorName, movieId) {
            $('#remActor' + actorId).prop("disabled", true);
            var url = "@Url.Action("RemoveActor", "Movies")";
            var id = actorId;
            var data = { id: id, movieId: movieId }
            $.get(url, data).done(function (data) {
                if (data != null) {
                    // add actor option to select
                    $('#actoresdata').append(new Option(actorName, actorId));
                    $('#actoresdata').selectpicker("refresh");
                    $('#actorslist').empty();
                    $('#actorslist').append(data);
                    $('#remActor' + actorId).prop("disabled", false);

                } else {
                    alert("viene vacío");
                    $('#actoresdata').append(new Option(actorName, actorId));
                    $('#actoresdata').selectpicker("refresh");
                }
            }).fail(function (mensajeError) {
                alert("fallo masivo");
                });
        }

    </script>
    }
    @*<script >
        $(function () {
            var url = "@Url.Action("NoActores")";
            var pelicula = @Model.MovieId;
            var data = { pelicula, pelicula };
            $.post(url, data).done(function todoBien (data) {

            }).fail(manejadorError).always(function () {
                // aqui siempre se ejecuta
            });
        });

        function manejadorError(error) {

        }
        function todoBien(data) {

        }
    </script>*@


